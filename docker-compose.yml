services:
  gitea:
    image: gitea/gitea:1.20.5-rootless
    restart: unless-stopped
    volumes:
      - /docker/gitea/data:/var/lib/gitea
      - /docker/gitea/config:/etc/gitea
      - /etc/timezone:/etc/timezone:ro
      - /etc/localtime:/etc/localtime:ro
    ports:
      - "3001:3000"
      - "222:2222"

  # homarr:
  #   container_name: homarr
  #   image: ghcr.io/ajnart/homarr:latest
  #   restart: unless-stopped
  #   volumes:
  #     - /docker/homarr/configs:/app/data/configs
  #     - /docker/homarr/icons:/app/public/icons
  #     - /var/run/docker.sock:/var/run/docker.sock
  #   ports:
  #     - '7575:7575'

  syncthing:
    image: lscr.io/linuxserver/syncthing:latest
    container_name: syncthing
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=Asia/Kolkata
    volumes:
      - /docker/syncthing/config:/config
      - /docker/syncthing/data1:/data1
      - /docker/syncthing/data2:/data2
    ports:
      - 8384:8384
      - 22000:22000/tcp
      - 22000:22000/udp
      - 21027:21027/udp
    restart: unless-stopped

  postgres:
    hostname: postgres
    image: postgres:15-alpine
    restart: unless-stopped
    volumes:
      - /docker/postgres/dendrite_postgres_data:/var/lib/postgresql/data
    environment:
      POSTGRES_PASSWORD: itsasecret
      POSTGRES_USER: dendrite
      POSTGRES_DATABASE: dendrite
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U dendrite"]
      interval: 5s
      timeout: 5s
      retries: 5

  monolith:
    hostname: matrix-dendrite
    image: matrixdotorg/dendrite-monolith:latest
    ports:
      - 8008:8008
      - 8448:8448
    volumes:
      - /docker/dendrite/config:/etc/dendrite
      - /docker/dendrite/dendrite_media:/var/dendrite/media
      - /docker/dendrite/dendrite_jetstream:/var/dendrite/jetstream
      - /docker/dendrite/dendrite_search_index:/var/dendrite/searchindex
      - /docker/dendrite/mnt/:/mnt
    depends_on:
      postgres:
        condition: service_healthy
    restart: unless-stopped

  npm:
    image: 'jc21/nginx-proxy-manager:latest'
    container_name: 'nginx-proxy-manager'
    restart: unless-stopped
    ports:
      - '80:80'
      - '443:443'
      - '81:81'

    volumes:
      - /docker/nginx-proxy-manager/data:/data
      - /docker/nginx-proxy-manager/letsencrypt:/etc/letsencrypt

  vaultwarden:
    restart: unless-stopped
    container_name: vaultwarden
    image: vaultwarden/server:latest
    volumes:
      - /docker/vaultwarden/:/data/
    ports:
      - 8062:80
    env_file: secrets.env
    environment:
      - SMTP_HOST=mail.izanagi.xyz
      - SMTP_FROM=vaultwarden@izanagi.xyz
      - SMTP_FROM_NAME=VaultWarden
      - SMTP_SECURITY=force_tls
      - SMTP_PORT=465
      - SMTP_USERNAME=vaultwarden@izanagi.xyz
      - LOGIN_RATELIMIT_MAX_BURST=10
      - LOGIN_RATELIMIT_SECONDS=60
      - DOMAIN=https://warden.izanagi.xyz
      - SIGNUPS_ALLOWED=false
      - SIGNUPS_VERIFY=true
      - SIGNUPS_VERIFY_RESEND_TIME=3600
      - SIGNUPS_VERIFY_RESEND_LIMIT=6
      - EMERGENCY_ACCESS_ALLOWED=true
      - SENDS_ALLOWED=true
      - WEB_VAULT_ENABLED=true

  sws:
    image: joseluisq/static-web-server
    container_name: static-web-server
    restart: unless-stopped
    ports:
      - 8787:80
    volumes:
      - /home/ubuntu/public:/public

  nextcloud-aio-mastercontainer:
    image: nextcloud/all-in-one:latest
    init: true
    restart: unless-stopped
    container_name: nextcloud-aio-mastercontainer
    volumes:
      - nextcloud_aio_mastercontainer:/mnt/docker-aio-config
      - /var/run/docker.sock:/var/run/docker.sock:ro
    ports:
      - 8081:8080
    environment:
      - APACHE_PORT=11000
      - APACHE_IP_BINDING=0.0.0.0
      - NEXTCLOUD_DATADIR=/docker/nextcloud
      - NEXTCLOUD_MEMORY_LIMIT=1024M

  # mc:
  #   image: itzg/minecraft-server
  #   ports:
  #     - "25565:25565"
  #   environment:
  #     EULA: "TRUE"
  #     TYPE: FABRIC
  #     MODRINTH_PROJECTS: lithium,vmp-fabric,c2me-fabric,ferrite-core,krypton,modernfix,chunky,starlight,fabric-api,lazydfu,journeymap
  #     MOTD: "§4§lZen's §6§lServer"
  #     ICON: "https://oshi.at/oDGP"
  #     ANNOUNCE_PLAYER_ACHIEVEMENTS: "TRUE"
  #     MEMORY: "8G"
  #     OPS: zen
  #     SERVER_NAME: "Zen's Server"
  #     SIMULATION_DISTANCE: "16"
  #     USE_AIKAR_FLAGS: "TRUE"
  #     SYNC_CHUNK_WRITES: "FALSE"
  #     VIEW_DISTANCE: "16"
  #     SPAWN_PROTECTION: "TRUE"
  #     ENABLE_AUTOPAUSE: "TRUE"
  #     ENABLE_STATUS: "TRUE"
  #     ONLINE_MODE: "FALSE"
  #     OVERRIDE_SERVER_PROPERTIES: "TRUE"
  #     MAX_TICK_TIME: "-1"
  #   restart: unless-stopped
  #   volumes:
  #     - /docker/minecraft/data:/data

  roundcubemail:
    image: roundcube/roundcubemail:latest
    container_name: roundcubemail
    restart: unless-stopped
    volumes:
      - /docker/roundmail/www:/var/www/html
      - /docker/roundmail/config:/var/roundcube/config
      - /docker/roundmail/db/sqlite:/var/roundcube/db
      - /docker/roundmail/tmp:/tmp/roundcube-temp
    ports:
      - 9002:80
    environment:
      - ROUNDCUBEMAIL_DB_TYPE=sqlite
      - ROUNDCUBEMAIL_DEFAULT_PORT=993
      - ROUNDCUBEMAIL_SKIN=elastic
      - ROUNDCUBEMAIL_SMTP_PORT=465
      - ROUNDCUBEMAIL_DEFAULT_HOST=ssl://mail.izanagi.xyz
      - ROUNDCUBEMAIL_SMTP_SERVER=ssl://mail.izanagi.xyz
      - ROUNDCUBEMAIL_UPLOAD_MAX_FILESIZE=25M

  wg-easy:
    container_name: wg-easy
    image: weejewel/wg-easy
    env_file: secrets.env
    environment:
      - WG_HOST=vpn.izanagi.xyz
    volumes:
      - /docker/wireguard:/etc/wireguard
    ports:
      - "51820:51820/udp"
      - "51821:51821/tcp"
    cap_add:
      - NET_ADMIN
      - SYS_MODULE
    sysctls:
      - net.ipv4.conf.all.src_valid_mark=1
      - net.ipv4.ip_forward=1
    restart: unless-stopped

  dashy:
    image: lissy93/dashy
    container_name: dashy
    volumes:
      - /home/ubuntu/my-config.yml:/app/public/conf.yml
    ports:
      - 4000:80
    environment:
      - NODE_ENV=production
    restart: unless-stopped

volumes:
  nextcloud_aio_mastercontainer:
    name: nextcloud_aio_mastercontainer
